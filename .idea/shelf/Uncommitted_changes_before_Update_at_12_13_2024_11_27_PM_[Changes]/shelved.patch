Index: pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n\txsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd\">\r\n\t<modelVersion>4.0.0</modelVersion>\r\n\t<parent>\r\n\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t<artifactId>spring-boot-starter-parent</artifactId>\r\n\t\t<version>3.4.0</version>\r\n\t\t<relativePath/> <!-- lookup parent from repository -->\r\n\t</parent>\r\n\t<groupId>com.</groupId>\r\n\t<artifactId>Chitti-voiceMail</artifactId>\r\n\t<version>0.0.1-SNAPSHOT</version>\r\n\t<name>Chitti-voiceMail</name>\r\n\t<description>Demo project for Spring Boot</description>\r\n\t<url/>\r\n\t<licenses>\r\n\t\t<license/>\r\n\t</licenses>\r\n\t<developers>\r\n\t\t<developer/>\r\n\t</developers>\r\n\t<scm>\r\n\t\t<connection/>\r\n\t\t<developerConnection/>\r\n\t\t<tag/>\r\n\t\t<url/>\r\n\t</scm>\r\n\t<properties>\r\n\t\t<java.version>17</java.version>\r\n\t</properties>\r\n\t<dependencies>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-web</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-data-jpa</artifactId>\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-devtools</artifactId>\r\n\t\t\t<scope>runtime</scope>\r\n\t\t\t<optional>true</optional>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>com.mysql</groupId>\r\n\t\t\t<artifactId>mysql-connector-j</artifactId>\r\n\t\t\t<version>8.3.0</version>\r\n\t\t\t<scope>compile</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-test</artifactId>\r\n\t\t\t<scope>test</scope>\r\n\r\n\t\t</dependency>\r\n\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t<artifactId>spring-boot-starter-log4j2</artifactId>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\t\t<dependency>\r\n\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t<scope>provided</scope>\r\n\t\t</dependency>\r\n\r\n\t</dependencies>\r\n\r\n\t<build>\r\n\t\t<plugins>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.apache.maven.plugins</groupId>\r\n\t\t\t\t<artifactId>maven-compiler-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<annotationProcessorPaths>\r\n\t\t\t\t\t\t<path>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</path>\r\n\t\t\t\t\t</annotationProcessorPaths>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t\t<plugin>\r\n\t\t\t\t<groupId>org.springframework.boot</groupId>\r\n\t\t\t\t<artifactId>spring-boot-maven-plugin</artifactId>\r\n\t\t\t\t<configuration>\r\n\t\t\t\t\t<excludes>\r\n\t\t\t\t\t\t<exclude>\r\n\t\t\t\t\t\t\t<groupId>org.projectlombok</groupId>\r\n\t\t\t\t\t\t\t<artifactId>lombok</artifactId>\r\n\t\t\t\t\t\t</exclude>\r\n\t\t\t\t\t</excludes>\r\n\t\t\t\t</configuration>\r\n\t\t\t</plugin>\r\n\t\t</plugins>\r\n\t</build>\r\n\r\n</project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/pom.xml b/pom.xml
--- a/pom.xml	(revision 60f1e1e5cdb3dcc45df1126d4347f176516610b7)
+++ b/pom.xml	(date 1734111141096)
@@ -1,115 +1,126 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
-	<modelVersion>4.0.0</modelVersion>
-	<parent>
-		<groupId>org.springframework.boot</groupId>
-		<artifactId>spring-boot-starter-parent</artifactId>
-		<version>3.4.0</version>
-		<relativePath/> <!-- lookup parent from repository -->
-	</parent>
-	<groupId>com.</groupId>
-	<artifactId>Chitti-voiceMail</artifactId>
-	<version>0.0.1-SNAPSHOT</version>
-	<name>Chitti-voiceMail</name>
-	<description>Demo project for Spring Boot</description>
-	<url/>
-	<licenses>
-		<license/>
-	</licenses>
-	<developers>
-		<developer/>
-	</developers>
-	<scm>
-		<connection/>
-		<developerConnection/>
-		<tag/>
-		<url/>
-	</scm>
-	<properties>
-		<java.version>17</java.version>
-	</properties>
-	<dependencies>
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-starter-web</artifactId>
-		</dependency>
+         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
+    <modelVersion>4.0.0</modelVersion>
+    <parent>
+        <groupId>org.springframework.boot</groupId>
+        <artifactId>spring-boot-starter-parent</artifactId>
+        <version>3.4.0</version>
+        <relativePath/> <!-- lookup parent from repository -->
+    </parent>
+    <groupId>com.</groupId>
+    <artifactId>Chitti-voiceMail</artifactId>
+    <version>0.0.1-SNAPSHOT</version>
+    <name>Chitti-voiceMail</name>
+    <description>Demo project for Spring Boot</description>
+    <url/>
+    <licenses>
+        <license/>
+    </licenses>
+    <developers>
+        <developer/>
+    </developers>
+    <scm>
+        <connection/>
+        <developerConnection/>
+        <tag/>
+        <url/>
+    </scm>
+    <properties>
+        <java.version>17</java.version>
+    </properties>
+    <dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-web</artifactId>
+        </dependency>
 
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-starter-data-jpa</artifactId>
-		</dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-jpa</artifactId>
+        </dependency>
 
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-devtools</artifactId>
-			<scope>runtime</scope>
-			<optional>true</optional>
-		</dependency>
-		<dependency>
-			<groupId>com.mysql</groupId>
-			<artifactId>mysql-connector-j</artifactId>
-			<version>8.3.0</version>
-			<scope>compile</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.projectlombok</groupId>
-			<artifactId>lombok</artifactId>
-			<scope>provided</scope>
-		</dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-devtools</artifactId>
+            <scope>runtime</scope>
+            <optional>true</optional>
+        </dependency>
+        <dependency>
+            <groupId>com.mysql</groupId>
+            <artifactId>mysql-connector-j</artifactId>
+            <version>8.3.0</version>
+            <scope>compile</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <scope>provided</scope>
+        </dependency>
 
 
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-starter-test</artifactId>
-			<scope>test</scope>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-test</artifactId>
+            <scope>test</scope>
 
-		</dependency>
+        </dependency>
 
-		<dependency>
-			<groupId>org.springframework.boot</groupId>
-			<artifactId>spring-boot-starter-log4j2</artifactId>
-		</dependency>
-		<dependency>
-			<groupId>org.projectlombok</groupId>
-			<artifactId>lombok</artifactId>
-			<scope>provided</scope>
-		</dependency>
-		<dependency>
-			<groupId>org.projectlombok</groupId>
-			<artifactId>lombok</artifactId>
-			<scope>provided</scope>
-		</dependency>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-log4j2</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <scope>provided</scope>
+        </dependency>
+        <dependency>
+            <groupId>org.projectlombok</groupId>
+            <artifactId>lombok</artifactId>
+            <scope>provided</scope>
+        </dependency>
 
-	</dependencies>
+        <dependency>
+            <groupId>org.springframework.boot</groupId>
+            <artifactId>spring-boot-starter-data-mongodb</artifactId>
+        </dependency>
+        <dependency>
+            <groupId>org.mongodb</groupId>
+            <artifactId>mongodb-driver-sync</artifactId>
+            <version>5.2.1</version> <!-- Replace with the latest version -->
+        </dependency>
+
+
+    </dependencies>
 
-	<build>
-		<plugins>
-			<plugin>
-				<groupId>org.apache.maven.plugins</groupId>
-				<artifactId>maven-compiler-plugin</artifactId>
-				<configuration>
-					<annotationProcessorPaths>
-						<path>
-							<groupId>org.projectlombok</groupId>
-							<artifactId>lombok</artifactId>
-						</path>
-					</annotationProcessorPaths>
-				</configuration>
-			</plugin>
-			<plugin>
-				<groupId>org.springframework.boot</groupId>
-				<artifactId>spring-boot-maven-plugin</artifactId>
-				<configuration>
-					<excludes>
-						<exclude>
-							<groupId>org.projectlombok</groupId>
-							<artifactId>lombok</artifactId>
-						</exclude>
-					</excludes>
-				</configuration>
-			</plugin>
-		</plugins>
-	</build>
+    <build>
+        <plugins>
+            <plugin>
+                <groupId>org.apache.maven.plugins</groupId>
+                <artifactId>maven-compiler-plugin</artifactId>
+                <configuration>
+                    <annotationProcessorPaths>
+                        <path>
+                            <groupId>org.projectlombok</groupId>
+                            <artifactId>lombok</artifactId>
+                        </path>
+                    </annotationProcessorPaths>
+                </configuration>
+            </plugin>
+            <plugin>
+                <groupId>org.springframework.boot</groupId>
+                <artifactId>spring-boot-maven-plugin</artifactId>
+                <configuration>
+                    <excludes>
+                        <exclude>
+                            <groupId>org.projectlombok</groupId>
+                            <artifactId>lombok</artifactId>
+                        </exclude>
+                    </excludes>
+                </configuration>
+            </plugin>
+        </plugins>
+    </build>
 
 </project>
Index: src/main/java/com/Chitti/AiVoiceMail/service/impl/TtsServiceImpl.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.Chitti.AiVoiceMail.service.impl;\r\n\r\nimport com.Chitti.AiVoiceMail.service.TtsService;\r\nimport org.springframework.http.HttpEntity;\r\nimport org.springframework.http.HttpHeaders;\r\nimport org.springframework.http.HttpMethod;\r\nimport org.springframework.http.MediaType;\r\nimport org.springframework.stereotype.Service;\r\n\r\n@Service\r\n@Slf4j\r\npublic class TtsServiceImpl implements TtsService {\r\n\r\n    public String convertTextToSpeechViaApi(String text, String fileName,String requestId) throws Exception {\r\n        String outputFilePath = Utilities.getOutputFilePath(localFilePath,fileName);\r\n        log.info(\"Output file path: {}\", outputFilePath);\r\n\r\n        Utilities.ensureDirectoryExists(localFilePath);\r\n\r\n        // Prepare the SSML request body\r\n        String ssml = String.format(\"<speak version='1.0' xmlns='http://www.w3.org/2001/10/synthesis' xml:lang='en-US'>\"\r\n                + \"<voice name='%s'>%s</voice></speak>\", voiceName, text);\r\n\r\n        HttpHeaders headers = new HttpHeaders();\r\n        headers.setContentType(MediaType.parseMediaType(\"application/ssml+xml\")); // Correct content type\r\n        headers.set(\"Ocp-Apim-Subscription-Key\", apiKey);\r\n        headers.set(\"X-Microsoft-OutputFormat\", \"riff-8khz-16bit-mono-pcm\");\r\n\r\n        HttpEntity<String> requestEntity = new HttpEntity<>(ssml, headers);\r\n\r\n        byte[] response = restTemplate.exchange(azureEndpoint, HttpMethod.POST, requestEntity, byte[].class).getBody();\r\n\r\n        Utilities.writeResponseToFile(response, outputFilePath);\r\n        log.info(\"Audio content written to file: {}\", outputFilePath);\r\n\r\n        return outputFilePath;\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/service/impl/TtsServiceImpl.java b/src/main/java/com/Chitti/AiVoiceMail/service/impl/TtsServiceImpl.java
--- a/src/main/java/com/Chitti/AiVoiceMail/service/impl/TtsServiceImpl.java	(revision 60f1e1e5cdb3dcc45df1126d4347f176516610b7)
+++ b/src/main/java/com/Chitti/AiVoiceMail/service/impl/TtsServiceImpl.java	(date 1734112491071)
@@ -1,10 +1,9 @@
 package com.Chitti.AiVoiceMail.service.impl;
 
 import com.Chitti.AiVoiceMail.service.TtsService;
+import lombok.extern.slf4j.Slf4j;
 import org.springframework.http.HttpEntity;
-import org.springframework.http.HttpHeaders;
 import org.springframework.http.HttpMethod;
-import org.springframework.http.MediaType;
 import org.springframework.stereotype.Service;
 
 @Service
@@ -38,4 +37,5 @@
 
 
 
+
 }
Index: src/main/resources/application.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>spring.application.name=Chitti-voiceMail\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/src/main/resources/application.properties b/src/main/resources/application.properties
--- a/src/main/resources/application.properties	(revision 60f1e1e5cdb3dcc45df1126d4347f176516610b7)
+++ b/src/main/resources/application.properties	(date 1734111247125)
@@ -1,1 +1,16 @@
 spring.application.name=Chitti-voiceMail
+server.port=8083
+
+#mongodb properties
+spring.data.mongodb.uri=mongodb+srv://${spring.data.mongodb.username}:${spring.data.mongodb.password}@cluster0.5ke5h.mongodb.net/
+spring.data.mongodb.database=chitti
+spring.data.mongodb.username=root
+spring.data.mongodb.password=r00t
+
+#mysql properties
+spring.datasource.url=jdbc:mysql://localhost:3306/chitti_ai?autoReconnect=true&useSSL=false
+spring.datasource.username=root
+spring.datasource.password=r00t
+spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
+spring.jpa.hibernate.ddl-auto=update
+spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect
Index: src/main/java/com/Chitti/AiVoiceMail/service/stt/impl/AzureSpeechToTextService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/service/stt/impl/AzureSpeechToTextService.java b/src/main/java/com/Chitti/AiVoiceMail/service/stt/impl/AzureSpeechToTextService.java
new file mode 100644
--- /dev/null	(date 1734112491064)
+++ b/src/main/java/com/Chitti/AiVoiceMail/service/stt/impl/AzureSpeechToTextService.java	(date 1734112491064)
@@ -0,0 +1,23 @@
+package com.Chitti.AiVoiceMail.service.stt.impl;
+
+import com.Chitti.AiVoiceMail.service.stt.SpeechToTextService;
+import org.springframework.context.annotation.Primary;
+import org.springframework.stereotype.Service;
+import org.springframework.web.multipart.MultipartFile;
+
+@Service
+@Primary
+public class AzureSpeechToTextService implements SpeechToTextService {
+
+    private static final String TYPE = "azure";
+    @Override
+    public String convertSpeechToText(MultipartFile audiFile, String filePath) {
+
+        return null;
+    }
+
+    @Override
+    public String getType() {
+        return "azure".toLowerCase();
+    }
+}
Index: src/main/java/com/Chitti/AiVoiceMail/models/AudioMetadata.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/models/AudioMetadata.java b/src/main/java/com/Chitti/AiVoiceMail/models/AudioMetadata.java
new file mode 100644
--- /dev/null	(date 1734109912100)
+++ b/src/main/java/com/Chitti/AiVoiceMail/models/AudioMetadata.java	(date 1734109912100)
@@ -0,0 +1,127 @@
+package com.Chitti.AiVoiceMail.models;
+
+import org.springframework.data.annotation.Id;
+import org.springframework.data.mongodb.core.mapping.Document;
+
+import java.time.LocalDateTime;
+import java.util.List;
+
+@Document(collection = "audio_metadata")
+public class AudioMetadata {
+
+    @Id
+    private String id;
+
+    private String sessionId;
+
+    private String userId;
+
+    private String filePath;
+
+    private int durationSeconds;
+
+    private String fileFormat;
+
+    private String transcriptionStatus;
+
+    private List<ProcessingLog> processingLogs;
+
+    private LocalDateTime createdAt;
+
+    // Inner class for ProcessingLog
+    public static class ProcessingLog {
+        private String stage;
+        private LocalDateTime timestamp;
+
+        // Getters and Setters
+        public String getStage() {
+            return stage;
+        }
+
+        public void setStage(String stage) {
+            this.stage = stage;
+        }
+
+        public LocalDateTime getTimestamp() {
+            return timestamp;
+        }
+
+        public void setTimestamp(LocalDateTime timestamp) {
+            this.timestamp = timestamp;
+        }
+    }
+
+    // Getters and Setters
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getSessionId() {
+        return sessionId;
+    }
+
+    public void setSessionId(String sessionId) {
+        this.sessionId = sessionId;
+    }
+
+    public String getUserId() {
+        return userId;
+    }
+
+    public void setUserId(String userId) {
+        this.userId = userId;
+    }
+
+    public String getFilePath() {
+        return filePath;
+    }
+
+    public void setFilePath(String filePath) {
+        this.filePath = filePath;
+    }
+
+    public int getDurationSeconds() {
+        return durationSeconds;
+    }
+
+    public void setDurationSeconds(int durationSeconds) {
+        this.durationSeconds = durationSeconds;
+    }
+
+    public String getFileFormat() {
+        return fileFormat;
+    }
+
+    public void setFileFormat(String fileFormat) {
+        this.fileFormat = fileFormat;
+    }
+
+    public String getTranscriptionStatus() {
+        return transcriptionStatus;
+    }
+
+    public void setTranscriptionStatus(String transcriptionStatus) {
+        this.transcriptionStatus = transcriptionStatus;
+    }
+
+    public List<ProcessingLog> getProcessingLogs() {
+        return processingLogs;
+    }
+
+    public void setProcessingLogs(List<ProcessingLog> processingLogs) {
+        this.processingLogs = processingLogs;
+    }
+
+    public LocalDateTime getCreatedAt() {
+        return createdAt;
+    }
+
+    public void setCreatedAt(LocalDateTime createdAt) {
+        this.createdAt = createdAt;
+    }
+}
+
Index: src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextService.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextService.java b/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextService.java
new file mode 100644
--- /dev/null	(date 1734112317214)
+++ b/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextService.java	(date 1734112317214)
@@ -0,0 +1,9 @@
+package com.Chitti.AiVoiceMail.service.stt;
+
+import org.springframework.web.multipart.MultipartFile;
+
+public interface SpeechToTextService {
+    String convertSpeechToText(MultipartFile audiFile, String filePath);
+
+    String getType();
+}
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1734108598942)
+++ b/.idea/.gitignore	(date 1734108598942)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextServiceFactory.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextServiceFactory.java b/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextServiceFactory.java
new file mode 100644
--- /dev/null	(date 1734112424845)
+++ b/src/main/java/com/Chitti/AiVoiceMail/service/stt/SpeechToTextServiceFactory.java	(date 1734112424845)
@@ -0,0 +1,24 @@
+package com.Chitti.AiVoiceMail.service.stt;
+
+import com.Chitti.AiVoiceMail.exception.InvalidSpeechToTextServiceType;
+import org.springframework.stereotype.Service;
+
+import java.util.HashSet;
+import java.util.Map;
+import java.util.Optional;
+
+@Service
+public class SpeechToTextServiceFactory {
+
+    private final Map<String, SpeechToTextService> speechToTextServiceMap;
+
+    public SpeechToTextServiceFactory(HashSet<SpeechToTextService> speechToTextServices) {
+        this.speechToTextServiceMap = speechToTextServices.stream().collect(
+                java.util.stream.Collectors.toMap(SpeechToTextService::getType, java.util.function.Function.identity()));
+    }
+
+    public SpeechToTextService getSpeechToTextService(String type) throws InvalidSpeechToTextServiceType {
+        return Optional.of(speechToTextServiceMap.get(type.toLowerCase())).orElseThrow(() -> new InvalidSpeechToTextServiceType("Invalid type of Speech To Text Service"));
+    }
+
+}
Index: src/main/java/com/Chitti/AiVoiceMail/models/ChatHistories.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/models/ChatHistories.java b/src/main/java/com/Chitti/AiVoiceMail/models/ChatHistories.java
new file mode 100644
--- /dev/null	(date 1734108918309)
+++ b/src/main/java/com/Chitti/AiVoiceMail/models/ChatHistories.java	(date 1734108918309)
@@ -0,0 +1,148 @@
+package com.Chitti.AiVoiceMail.models;
+
+import org.springframework.data.annotation.Id;
+import org.springframework.data.mongodb.core.mapping.Document;
+
+import java.time.LocalDateTime;
+import java.util.List;
+
+@Document(collection = "chat_histories")
+public class ChatHistories {
+
+    @Id
+    private String id;
+
+    private String sessionId;
+
+    private String userId;
+
+    private LocalDateTime timestamp;
+
+    private List<Message> messages;
+
+    private String summary;
+
+    private LocalDateTime lastUpdated;
+
+    private Metadata metadata;
+
+    // Inner class for Messages
+    public static class Message {
+        private String role;
+        private String content;
+        private LocalDateTime timestamp;
+
+        // Getters and Setters
+        public String getRole() {
+            return role;
+        }
+
+        public void setRole(String role) {
+            this.role = role;
+        }
+
+        public String getContent() {
+            return content;
+        }
+
+        public void setContent(String content) {
+            this.content = content;
+        }
+
+        public LocalDateTime getTimestamp() {
+            return timestamp;
+        }
+
+        public void setTimestamp(LocalDateTime timestamp) {
+            this.timestamp = timestamp;
+        }
+    }
+
+    // Inner class for Metadata
+    public static class Metadata {
+        private String source;
+        private String appVersion;
+
+        // Getters and Setters
+        public String getSource() {
+            return source;
+        }
+
+        public void setSource(String source) {
+            this.source = source;
+        }
+
+        public String getAppVersion() {
+            return appVersion;
+        }
+
+        public void setAppVersion(String appVersion) {
+            this.appVersion = appVersion;
+        }
+    }
+
+    // Getters and Setters
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getSessionId() {
+        return sessionId;
+    }
+
+    public void setSessionId(String sessionId) {
+        this.sessionId = sessionId;
+    }
+
+    public String getUserId() {
+        return userId;
+    }
+
+    public void setUserId(String userId) {
+        this.userId = userId;
+    }
+
+    public LocalDateTime getTimestamp() {
+        return timestamp;
+    }
+
+    public void setTimestamp(LocalDateTime timestamp) {
+        this.timestamp = timestamp;
+    }
+
+    public List<Message> getMessages() {
+        return messages;
+    }
+
+    public void setMessages(List<Message> messages) {
+        this.messages = messages;
+    }
+
+    public String getSummary() {
+        return summary;
+    }
+
+    public void setSummary(String summary) {
+        this.summary = summary;
+    }
+
+    public LocalDateTime getLastUpdated() {
+        return lastUpdated;
+    }
+
+    public void setLastUpdated(LocalDateTime lastUpdated) {
+        this.lastUpdated = lastUpdated;
+    }
+
+    public Metadata getMetadata() {
+        return metadata;
+    }
+
+    public void setMetadata(Metadata metadata) {
+        this.metadata = metadata;
+    }
+}
Index: src/main/java/com/Chitti/AiVoiceMail/exception/InvalidSpeechToTextServiceType.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/exception/InvalidSpeechToTextServiceType.java b/src/main/java/com/Chitti/AiVoiceMail/exception/InvalidSpeechToTextServiceType.java
new file mode 100644
--- /dev/null	(date 1734112424850)
+++ b/src/main/java/com/Chitti/AiVoiceMail/exception/InvalidSpeechToTextServiceType.java	(date 1734112424850)
@@ -0,0 +1,7 @@
+package com.Chitti.AiVoiceMail.exception;
+
+public class InvalidSpeechToTextServiceType extends Exception {
+    public InvalidSpeechToTextServiceType(String s) {
+        super(s);
+    }
+}
Index: src/main/java/com/Chitti/AiVoiceMail/controller/CallReceiverController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/controller/CallReceiverController.java b/src/main/java/com/Chitti/AiVoiceMail/controller/CallReceiverController.java
new file mode 100644
--- /dev/null	(date 1734111431834)
+++ b/src/main/java/com/Chitti/AiVoiceMail/controller/CallReceiverController.java	(date 1734111431834)
@@ -0,0 +1,38 @@
+package com.Chitti.AiVoiceMail.controller;
+
+import lombok.Value;
+import org.springframework.http.*;
+import org.springframework.util.LinkedMultiValueMap;
+import org.springframework.util.MultiValueMap;
+import org.springframework.web.bind.annotation.PostMapping;
+import org.springframework.web.bind.annotation.RequestMapping;
+import org.springframework.web.bind.annotation.RequestParam;
+import org.springframework.web.bind.annotation.RestController;
+import org.springframework.web.client.RestTemplate;
+import org.springframework.web.multipart.MultipartFile;
+
+import java.io.IOException;
+
+@RestController
+@RequestMapping("/call-receiver")
+public class CallReceiverController {
+
+
+    @PostMapping(consumes = MediaType.MULTIPART_FORM_DATA_VALUE)
+    public ResponseEntity<String> transcribeAudio(@RequestParam("audio") MultipartFile audioFile) {
+        try {
+            // Validate file type
+            if (audioFile.isEmpty() || !audioFile.getContentType().startsWith("audio/")) {
+                return ResponseEntity.badRequest().body("Invalid audio file.");
+            }
+            audioFile.getResource();
+            // Prepare headers for Azure API request
+
+            // Return the transcription result
+            return ResponseEntity.ok("ok");
+
+        } catch (Exception e) {
+            return ResponseEntity.status(500).body("An error occurred: " + e.getMessage());
+        }
+    }
+}
Index: src/main/java/com/Chitti/AiVoiceMail/models/UserCustomizations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/com/Chitti/AiVoiceMail/models/UserCustomizations.java b/src/main/java/com/Chitti/AiVoiceMail/models/UserCustomizations.java
new file mode 100644
--- /dev/null	(date 1734109444328)
+++ b/src/main/java/com/Chitti/AiVoiceMail/models/UserCustomizations.java	(date 1734109444328)
@@ -0,0 +1,94 @@
+package com.Chitti.AiVoiceMail.models;
+
+import org.springframework.data.annotation.Id;
+import org.springframework.data.mongodb.core.mapping.Document;
+
+import java.time.LocalDateTime;
+import java.util.List;
+
+@Document(collection = "user_customizations")
+public class UserCustomizations {
+
+    @Id
+    private String id;
+
+    private String preferredTone;
+
+    private List<String> categories;
+
+    private String defaultLanguage;
+
+    private String greetings;
+
+    private String voicePreference;
+
+    private LocalDateTime createdAt;
+
+    private LocalDateTime updatedAt;
+
+    // Getters and Setters
+    public String getId() {
+        return id;
+    }
+
+    public void setId(String id) {
+        this.id = id;
+    }
+
+    public String getPreferredTone() {
+        return preferredTone;
+    }
+
+    public void setPreferredTone(String preferredTone) {
+        this.preferredTone = preferredTone;
+    }
+
+    public List<String> getCategories() {
+        return categories;
+    }
+
+    public void setCategories(List<String> categories) {
+        this.categories = categories;
+    }
+
+    public String getDefaultLanguage() {
+        return defaultLanguage;
+    }
+
+    public void setDefaultLanguage(String defaultLanguage) {
+        this.defaultLanguage = defaultLanguage;
+    }
+
+    public String getGreetings() {
+        return greetings;
+    }
+
+    public void setGreetings(String greetings) {
+        this.greetings = greetings;
+    }
+
+    public String getVoicePreference() {
+        return voicePreference;
+    }
+
+    public void setVoicePreference(String voicePreference) {
+        this.voicePreference = voicePreference;
+    }
+
+    public LocalDateTime getCreatedAt() {
+        return createdAt;
+    }
+
+    public void setCreatedAt(LocalDateTime createdAt) {
+        this.createdAt = createdAt;
+    }
+
+    public LocalDateTime getUpdatedAt() {
+        return updatedAt;
+    }
+
+    public void setUpdatedAt(LocalDateTime updatedAt) {
+        this.updatedAt = updatedAt;
+    }
+}
+
